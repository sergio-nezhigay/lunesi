{% comment %}
Hair Quiz Section for Shopify - Enhanced with Omnisend Events and Personalized Messaging
{% endcomment %}

<section class="hair-quiz-section" id="hairQuizSection">
  <div class="quiz-container">
    
    <!-- Landing Step -->
    <div class="quiz-step" id="landingStep">
      <div class="quiz-header">
        <h2>{{ section.settings.quiz_title | default: "Discover Your Perfect Hair Care Routine" }}</h2>
        <p>{{ section.settings.quiz_subtitle | default: "Get personalized recommendations based on your unique hair type and needs" }}</p>
      </div>
      
      <div class="landing-cta">
        <button type="button" id="startQuizBtn" class="button button--medium ">Start Quiz</button>
      </div>
    </div>

    <!-- Quiz Questions -->
    <div class="quiz-step hidden" id="quizStep">
      <div class="quiz-progress">
        <div class="progress-bar">
          <div class="progress-fill" id="progressFill"></div>
        </div>
        <span class="progress-text">Question <span id="currentQuestion">1</span> of 10</span>
      </div>

      <form id="quizForm">
        
        <!-- Question 1: Hair Type -->
        <div class="question active" data-question="1">
          <h3>What type of hair do you have?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="hair_type" value="straight">
              <span>Straight</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_type" value="wavy">
              <span>Wavy</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_type" value="curly">
              <span>Curly</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_type" value="afro">
              <span>Very curly / Afro hair</span>
            </label>
          </div>
        </div>

        <!-- Question 2: Hair Thickness -->
        <div class="question" data-question="2">
          <h3>What is the thickness of your hair?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="hair_thickness" value="fine">
              <span>Fine</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_thickness" value="medium">
              <span>Medium</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_thickness" value="thick">
              <span>Thick</span>
            </label>
          </div>
        </div>

        <!-- Question 3: Washing Frequency -->
        <div class="question" data-question="3">
          <h3>How often do you wash your hair?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="wash_frequency" value="daily">
              <span>Daily</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="wash_frequency" value="2-3_times">
              <span>2-3 times a week</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="wash_frequency" value="2_times">
              <span>2 times a week</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="wash_frequency" value="once">
              <span>Once a week</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="wash_frequency" value="less_often">
              <span>Less often</span>
            </label>
          </div>
        </div>

        <!-- Question 4: Drying Preference -->
        <div class="question" data-question="4">
          <h3>What do you prefer?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="drying_preference" value="blow_drying">
              <span>Blow-drying</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="drying_preference" value="natural_drying">
              <span>Natural drying</span>
            </label>
          </div>
        </div>

        <!-- Question 5: Hair Goals -->
        <div class="question" data-question="5">
          <h3>What is your main goal right now?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="hair_goals" value="recovery">
              <span>Recovery from damage (coloring, styling)</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_goals" value="shine">
              <span>Shine and smoothness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_goals" value="volume">
              <span>Volume and lightness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_goals" value="moisture">
              <span>Moisturization and softness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_goals" value="growth">
              <span>Hair growth</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_goals" value="frizz">
              <span>Reduce frizz</span>
            </label>
          </div>
        </div>

        <!-- Question 6: Hair Problems -->
        <div class="question" data-question="6">
          <h3>What is your main problem right now?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="hair_problem" value="oiliness">
              <span>Oiliness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_problem" value="dryness">
              <span>Dryness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_problem" value="frizziness">
              <span>Frizziness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_problem" value="brittleness">
              <span>Brittleness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_problem" value="dullness">
              <span>Dullness</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_problem" value="loss">
              <span>Hair loss</span>
            </label>
          </div>
        </div>

        <!-- Question 7: Styling Habits -->
        <div class="question" data-question="7">
          <h3>How do you usually style your hair?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="styling_habits" value="daily_heat">
              <span>Hairdryer/straightener/blow dryer daily</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="styling_habits" value="no_styling">
              <span>I don't style</span>
            </label>
          </div>
        </div>

        <!-- Question 8: Hair Coloring -->
        <div class="question" data-question="8">
          <h3>Is your hair colored?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="hair_colored" value="regularly">
              <span>Yes, regularly</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_colored" value="rarely">
              <span>Yes, but rarely</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="hair_colored" value="no">
              <span>No</span>
            </label>
          </div>
        </div>

        <!-- Question 9: Scalp Condition -->
        <div class="question" data-question="9">
          <h3>How does your scalp behave?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="scalp_condition" value="oily">
              <span>Rapidly oily</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="scalp_condition" value="dry">
              <span>Dry and irritated</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="scalp_condition" value="normal">
              <span>Normal</span>
            </label>
          </div>
        </div>

        <!-- Question 10: Lifestyle -->
        <div class="question" data-question="10">
          <h3>What is your lifestyle?</h3>
          <div class="answer-grid">
            <label class="answer-option">
              <input type="radio" name="lifestyle" value="active">
              <span>Very active (sports, lots of movement)</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="lifestyle" value="office">
              <span>Office / city / minimal movement</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="lifestyle" value="traveler">
              <span>Frequent traveler</span>
            </label>
            <label class="answer-option">
              <input type="radio" name="lifestyle" value="home">
              <span>On maternity leave / at home</span>
            </label>
          </div>
        </div>

        <div class="quiz-navigation">
          <button type="button" id="prevBtn" class="btn-secondary hidden">Previous</button>
          <button type="button" id="nextBtn" class="btn-primary">Next</button>
          <button type="submit" id="submitBtn" class="btn-primary hidden">Complete Quiz</button>
        </div>
      </form>
    </div>

    <!-- Email Collection Step -->
    <div class="quiz-step hidden" id="emailStep">
      <div class="quiz-header">
        <h2>{{ section.settings.email_title | default: "Get Your Personalized Results" }}</h2>
        <p>{{ section.settings.email_subtitle | default: "Enter your email to receive your customized hair care recommendations" }}</p>
      </div>
      
      <div class="email-form">
        <form id="emailForm">
          <div class="input-group-vertical">
            <input type="email" id="userEmail" placeholder="Enter your email address" required>
            <button type="submit" class="button button--medium">Get My Results</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Final Step -->
    <div class="quiz-step hidden" id="finalStep">
      <div class="final-message">
        <h2>{{ section.settings.final_title | default: "Thank You!" }}</h2>
        <p>{{ section.settings.final_message | default: "You will receive your personalized product selection via email shortly." }}</p>
      </div>
    </div>

  </div>
</section>

<style>
.hair-quiz-section {
  max-width: 1200px;
  margin: 0 auto;
  padding: 60px 40px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  min-height: 80vh;
}

.quiz-container {
  background: #fff;
  border-radius: 20px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.05);
  overflow: hidden;
  border: 1px solid #f3f3f3;
  min-height: 70vh;
}

.quiz-step {
  padding: 80px 60px;
  min-height: 65vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.quiz-step.hidden {
  display: none;
}

.quiz-header {
  text-align: center;
  margin-bottom: 60px;
}

.quiz-header h2 {
  font-size: 3.5rem;
  font-weight: 600;
  color: #212326;
  margin-bottom: 24px;
  line-height: 1.2;
}

.quiz-header p {
  font-size: 1.5rem;
  color: #212326;
  opacity: 0.7;
  line-height: 1.6;
  max-width: 700px;
  margin: 0 auto;
  font-family: 'Montserrat' !important;
}

.landing-cta {
  text-align: center;
}

.btn-primary.large {
  padding: 24px 48px;
  font-size: 1.4rem;
  font-weight: 600;
  min-width: 250px;
}

.email-form {
  max-width: 700px;
  margin: 0 auto;
  text-align: center;
}

.email-form h3 {
  font-size: 2.2rem;
  color: #212326;
  margin-bottom: 16px;
  font-weight: 500;
}

.email-form p {
  color: #212326;
  opacity: 0.6;
  margin-bottom: 50px;
  font-size: 1.3rem;
}

.input-group-vertical {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 20px;
  min-width: 300px;
  max-width: 600px;
  margin: 0 auto 20px auto;
}

.input-group-vertical input[type="email"] {
  padding: 20px 24px;
  border: 2px solid #f3f3f3;
  border-radius: 12px;
  font-size: 1.2rem;
  color: #212326;
  background: #fff;
  transition: border-color 0.3s ease;
  width: 100%;
}

.input-group-vertical input[type="email"]:focus {
  outline: none;
  border-color: #F9E7F1;
}

.input-group-vertical .btn-primary {
  width: 100%;
  padding: 20px 24px;
  font-size: 1.2rem;
}

.quiz-progress {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 60px;
}

.progress-bar {
  flex: 1;
  height: 8px;
  background: #f3f3f3;
  border-radius: 4px;
  margin-right: 24px;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: #DDA9CB;
  border-radius: 4px;
  transition: width 0.3s ease;
  width: 10%;
  display: block !important;
}

.progress-text {
  font-weight: 500;
  color: #212326;
  white-space: nowrap;
  font-size: 1rem;
}

.question {
  display: none;
}

.question.active {
  display: block;
  animation: fadeInUp 0.4s ease;
}

.question h3 {
  font-size: 2rem;
  color: #212326;
  margin-bottom: 40px;
  text-align: center;
  font-weight: 500;
  line-height: 1.4;
}

.answer-grid {
  display: grid;
  gap: 20px;
  max-width: 800px;
  margin: 0 auto;
}

.answer-option {
  display: flex;
  align-items: center;
  padding: 24px 28px;
  border: 2px solid #f3f3f3;
  border-radius: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
  background: #fff;
}

.answer-option:hover {
  border-color: #F9E7F1;
  background: #fefbfd;
}

.answer-option.selected {
  border-color: #F9E7F1;
  background: #F9E7F1;
}

.answer-option input[type="radio"] {
  display: none;
}

.answer-option span {
  font-size: 1.2rem;
  color: #212326;
  opacity: 0.8;
  transition: all 0.3s ease;
  line-height: 1.4;
}

.quiz-navigation {
  display: flex;
  justify-content: space-between;
  margin-top: 60px;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

.btn-primary, .btn-secondary {
  padding: 18px 36px;
  border: none;
  border-radius: 12px;
  font-size: 1.2rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  min-width: 160px;
  font-family: inherit;
}

.btn-primary {
  background: #F9E7F1;
  color: #212326;
}

.btn-primary:hover {
  background: #f5d8ea;
}

.btn-primary:disabled {
  background: #f3f3f3;
  color: #212326;
  opacity: 0.5;
  cursor: not-allowed;
}

.btn-secondary {
  background: #f8f8f8;
  color: #212326;
  border: 2px solid #e8e8e8;
}

.btn-secondary:hover {
  background: #f0f0f0;
  border-color: #ddd;
}

.final-message {
  text-align: center;
  max-width: 600px;
  margin: 0 auto;
}

.final-message h2 {
  font-size: 2.5rem;
  color: #212326;
  margin-bottom: 24px;
  font-weight: 600;
}

.final-message p {
  font-size: 1.3rem;
  color: #212326;
  opacity: 0.7;
  line-height: 1.6;
}

@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.input-error {
  border: 2px solid red !important;
  animation: shake 0.3s ease-in-out;
}

@media (max-width: 768px) {
  .input-group-vertical {
    min-width: 250px !important;
  }
  .hair-quiz-section {
    padding: 30px 20px;
  }
  
  .quiz-step {
    padding: 40px 30px;
    min-height: auto;
  }
  
  .quiz-header h2 {
    font-size: 2.2rem;
  }
  
  .question h3 {
    font-size: 1.6rem;
  }
  
  .input-group-vertical {
    gap: 16px;
  }
  
  .quiz-navigation {
    flex-direction: column;
    gap: 16px;
  }
  
  .answer-option {
    padding: 20px 24px;
  }
  
  .answer-grid {
    max-width: 100%;
  }
  
  .final-message h2 {
    font-size: 2rem;
  }
}

.answer-option.selected span {
  color: #212326;
  font-weight: 600;
}
</style>

<script>
(function() {
  'use strict';
  
  const OMNISEND_API_KEY = '66b4f08d3245832d9dfc8e4c-pGw52OhTA5rgmbd7iyaBEfnhHqwMJ317fyvHhAqsumBn1H1gES';
  const SHOP_DOMAIN = window.Shopify?.shop || 'lunesi.co.uk';
  
  const CURRENCY_SYMBOLS = {
    'GBP': '£',
    'USD': '$',
    'EUR': '€',
    'PLN': 'zł',
    'CAD': 'C$',
    'AUD': 'A$',
    'CZK': 'Kč',
    'DKK': 'kr',
    'HUF': 'Ft',
    'NOK': 'kr',
    'SEK': 'kr',
    'CHF': 'CHF'
  };
  
  const PRODUCT_MAPPING = {
    '8055477895299': 'illuminating-leave-in-conditioner',
    '8048293052547': 'stardust-nourishing-shampoo',
    '8048292528259': 'rising-moon-secret-scalp-toner',
    '8048292397187': 'alchemical-golden-hair-oil',
    '8048292298883': 'deep-love-hair-mask'
  };
  
  const PERSONALIZED_RECOMMENDATIONS = {
    'straight_oily_volume': {
      text: 'Start with a light touch — Stardust Shampoo resets your scalp without over-drying. TEQACTIVE (HaB)3+C keeps things balanced and clean for longer. Add a veil of volume with Illuminating Leave-In. Powered by plant proteins, it lifts gently while keeping your hair light, breathable, and fresh from root to tip.',
      products: ['8048293052547', '8055477895299'],
      profile: 'You have straight hair with oily scalp that needs volume and lightness.'
    },
    'wavy_dryness_shine': {
      text: 'Cleanse with Stardust Shampoo to prep your strands. Then wrap your waves in Deep Love Mask — Ceramide A2 and amino acids work within to restore moisture and glow. With each use, texture softens, bounce returns, and shine flows through every curve.',
      products: ['8048293052547', '8048292298883'],
      profile: 'You have wavy hair with dry ends that needs shine through hydration.'
    },
    'curly_frizziness_frizz': {
      text: 'After washing, layer in Illuminating Leave-In to smooth, define, and hydrate. Follow with Alchemical Golden Hair Oil — a touch of baobab and marula to seal softness and sculpt shape. Your curls stay calm, defined, and beautifully expressive.',
      products: ['8055477895299', '8048292397187'],
      profile: 'You have curly hair that\'s frizz-prone and needs curl definition and structure.'
    },
    'straight_brittleness_recovery': {
      text: 'Start with Stardust Shampoo to gently cleanse. Then go deeper with Deep Love Mask — Ceramide A2 rebuilds from within, restoring softness and structure. Week by week, your hair feels smoother, stronger, and ready for more.',
      products: ['8048293052547', '8048292298883'],
      profile: 'You have straight hair that\'s brittle and needs strength and repair.'
    },
    'curly_dryness_moisture': {
      text: 'Layer in moisture where it matters. After washing, use Deep Love Mask to saturate your curls with care. Seal with Alchemical Golden Hair Oil — softness stays in, frizz stays out. Your curls feel full, hydrated, and beautifully held between washes.',
      products: ['8048292298883', '8048292397187'],
      profile: 'You have curly hair with dry ends that needs deep moisture.'
    },
    'wavy_frizziness_volume': {
      text: 'Start fresh with Stardust Shampoo — it lifts without weight. Deep Love Mask smooths and hydrates where needed. Finish with Alchemical Golden Hair Oil for silky control and airy volume that moves with you.',
      products: ['8048293052547', '8048292298883', '8048292397187'],
      profile: 'You have wavy hair with frizz that needs smooth shape and body.'
    },
    'curly_daily_dryness': {
      text: 'Daily cleansing deserves a soft reset. Use Stardust Shampoo for a gentle clean. Then, treat with Deep Love Mask — it restores what washing can take away. A touch of Golden Oil locks in hydration, leaving curls supple and resilient.',
      products: ['8048293052547', '8048292298883', '8048292397187'],
      profile: 'You have curly hair washed daily with dry ends that needs soft recovery.'
    },
    'straight_fine_dryness': {
      text: 'Deep Love Mask gives softness without weight — perfect for dry ends and fragile fibres. To lift at the root, mist in Illuminating Leave-In Conditioner. Hair feels fuller, smoother, and ready to move freely.',
      products: ['8048292298883', '8055477895299'],
      profile: 'You have straight thin hair with dry ends that needs soft volume.'
    },
    'straight_colored_volume': {
      text: 'Cleanse with Stardust Shampoo — it\'s gentle on colour while lifting impurities. Then use Illuminating Leave-In to boost volume and shine with lightweight plant proteins. UV filters protect your tone and leave hair luminous.',
      products: ['8048293052547', '8055477895299'],
      profile: 'You have straight color-treated hair that needs volume and shine.'
    },
    'wavy_oiliness_shine': {
      text: 'Stardust Shampoo refreshes roots and clears buildup, leaving your scalp light and airy. Follow with Illuminating Leave-In to smooth and brighten the strands. The result? Clean shine and soft waves that last.',
      products: ['8048293052547', '8055477895299'],
      profile: 'You have wavy hair with oily scalp that needs fresh shine.'
    },
    'straight_daily_heat_recovery': {
      text: 'Shield and soften with Illuminating Leave-In — your daily layer of defence against heat. It smooths strands, adds shine, and boosts flexibility without weight. Perfect for fine hair in the heat-styling cycle.',
      products: ['8055477895299'],
      profile: 'You have straight hair with heat exposure that needs protection and elasticity.'
    },
    'wavy_dry_scalp': {
      text: 'After washing, apply Rising Moon Scalp Toner. It soothes irritation, resets the scalp, and helps your roots feel fresh. Balanced roots, thriving waves.',
      products: ['8048292528259'],
      profile: 'You have wavy hair with flaking scalp that needs scalp care and balance.'
    },
    'curly_daily_heat_recovery': {
      text: 'Layer on care after wash. Illuminating Leave-In softens and shields from heat. Follow with Alchemical Golden Oil to hold hydration and polish curls. Damage stays out, bounce stays in.',
      products: ['8055477895299', '8048292397187'],
      profile: 'You have curly hair with damage from blow-drying that needs protection.'
    },
    'straight_oily_dryness': {
      text: 'Clarify gently with Stardust Shampoo to refresh scalp and root. Then smooth Alchemical Golden Hair Oil onto ends — it adds sheen, seals in softness, and keeps hair feeling fresher longer.',
      products: ['8048293052547', '8048292397187'],
      profile: 'You have straight hair with oily scalp and light styling that needs refresh and sealed ends.'
    },
    'curly_dullness_shine': {
      text: 'Bring curls back to life. Start with Deep Love Mask to restore bounce and softness. Golden Oil adds shape, shine, and definition with zero heaviness.',
      products: ['8048292298883', '8048292397187'],
      profile: 'You have curly hair that lacks glow and needs nourishment and definition.'
    },
    'wavy_frizziness_volume_loss': {
      text: 'Start with Stardust Shampoo — it lifts without weighing down. Hydrate with Deep Love Mask, then finish with Golden Oil to smooth frizz and revive natural body.',
      products: ['8048293052547', '8048292298883', '8048292397187'],
      profile: 'You have wavy hair with frizz and volume loss that needs airy shape.'
    },
    'straight_daily_wash': {
      text: 'Support your strands with Deep Love Mask. Ceramide A2 and amino acids build strength from within. Even with daily washing, hair feels resilient, soft, and ready for the day.',
      products: ['8048292298883'],
      profile: 'You have straight hair washed daily that needs strength and renewal.'
    },
    'wavy_loss_growth': {
      text: 'Post-cleanse, use Rising Moon Scalp Toner — it energises roots, balances oil, and refreshes the scalp. Stronger roots, fuller hair.',
      products: ['8048292528259'],
      profile: 'You have wavy hair with hair fall that needs root support.'
    },
    'straight_volume_loss': {
      text: 'Clarify gently with Stardust Shampoo to lift the roots. Add Rising Moon Scalp Toner twice a week — it supports healthy scalp function and encourages light fullness.',
      products: ['8048293052547', '8048292528259'],
      profile: 'You have straight hair with volume loss that needs stimulation and light care.'
    },
    'curly_dryness_recovery': {
      text: 'Start with Deep Love Mask to bring back softness and strength. Follow with Golden Hair Oil to shield curls from stress and restore healthy bounce.',
      products: ['8048292298883', '8048292397187'],
      profile: 'You have curly hair that\'s dry and stressed and needs protection and repair.'
    },
    'wavy_rare_wash_frizz': {
      text: 'Refresh with Illuminating Leave-In after wash — it helps hold shape and keep waves touchable. Smooth, soft texture between wash days.',
      products: ['8055477895299'],
      profile: 'You have wavy hair washed rarely with frizz that needs smoothness and shape.'
    },
    'curly_growth_recovery': {
      text: 'Rising Moon Toner stimulates the scalp, while Deep Love Mask restores strength along the length. Together, they renew roots and protect growth — for texture that flourishes.',
      products: ['8048292528259', '8048292298883'],
      profile: 'You have curly hair with growth and repair goals that needs scalp and length renewal.'
    },
    'straight_fine_frizziness': {
      text: 'Deep Love Mask gives softness without weight — perfect for fine strands prone to frizz. To lift at the root, mist in Illuminating Leave-In Conditioner. Hair feels fuller, smoother, and ready to move freely.',
      products: ['8048292298883', '8055477895299'],
      profile: 'You have straight fine hair that\'s frizz-prone and needs lightweight smoothing.'
    },
    'straight_frizziness_frizz': {
      text: 'Shield and soften with Illuminating Leave-In — your daily layer of defence against frizz. Follow with a touch of Alchemical Golden Hair Oil to seal smoothness and add shine without weight.',
      products: ['8055477895299', '8048292397187'],
      profile: 'You have straight hair that\'s frizz-prone and needs smooth control.'
    },
    'straight_fine_shine': {
      text: 'Deep Love Mask gives softness without weight — perfect for dry ends and fragile fibres. To lift at the root, mist in Illuminating Leave-In Conditioner. Hair feels fuller, smoother, and ready to move freely.',
      products: ['8048292298883', '8055477895299'],
      profile: 'You have straight fine hair that needs soft volume and shine.'
    }
  };
  
  const VALID_DOMAINS = [
    'gmail.com','yahoo.com','hotmail.com','outlook.com','live.com',
    'aol.com','icloud.com','me.com','mac.com','protonmail.com',
    'yandex.com','mail.ru','rambler.ru','ukr.net','i.ua',
    'meta.ua','bigmir.net','inbox.ru','list.ru','bk.ru',
    'zoho.com','fastmail.com','tutanota.com','gmx.com','web.de'
  ];
  
  const COMMON_TYPOS = {
    'gmial.com':'gmail.com','gmai.com':'gmail.com','gmamil.com':'gmail.com',
    'gmaol.com':'gmail.com','gmsil.com':'gmail.com','gmaiil.com':'gmail.com',
    'gmaail.com':'gmail.com','gmali.com':'gmail.com','yahooo.com':'yahoo.com',
    'yaho.com':'yahoo.com','hotmial.com':'hotmail.com','hotmaiil.com':'hotmail.com',
    'hotmeil.com':'hotmail.com','outlok.com':'outlook.com','outloook.com':'outlook.com',
    'outlool.com':'outlook.com'
  };

  let currentQuestionIndex = 1;
  let quizAnswers = {};
  let userEmail = '';

  function getCurrentCurrency() {
    let currency = null;
    
    if (window.Shopify?.currency?.active) {
      currency = window.Shopify.currency.active;
    }
    
    if (!currency) {
      const currencyMeta = document.querySelector('meta[name="currency"]');
      if (currencyMeta) {
        currency = currencyMeta.getAttribute('content');
      }
    }
    
    if (!currency) {
      const currencyElement = document.querySelector('[data-currency]');
      if (currencyElement) {
        currency = currencyElement.dataset.currency;
      }
    }
    
    if (!currency && typeof localStorage !== 'undefined') {
      try {
        const storedCurrency = localStorage.getItem('shopify_currency') || 
                             localStorage.getItem('currency') ||
                             localStorage.getItem('cart_currency');
        if (storedCurrency) {
          currency = storedCurrency;
        }
      } catch (e) {}
    }
    
    if (!currency && typeof document !== 'undefined') {
      const currencyMatch = document.cookie.match(/currency=([^;]+)/);
      if (currencyMatch) {
        currency = currencyMatch[1];
      }
    }
    
    if (!currency) {
      const urlParams = new URLSearchParams(window.location.search);
      currency = urlParams.get('currency');
    }
    
    currency = currency || 'GBP';
    return currency.toUpperCase();
  }

  function getCurrencySymbol(currency) {
    return CURRENCY_SYMBOLS[currency?.toUpperCase()] || currency || '£';
  }

  function formatPriceWithCurrency(rawPrice, currency = null) {
    let numericPrice;
    
    if (typeof rawPrice === 'string') {
      const cleanPrice = rawPrice.replace(/[^\d.]/g, '');
      numericPrice = parseFloat(cleanPrice);
    } else if (typeof rawPrice === 'number') {
      numericPrice = rawPrice;
    }
    
    if (isNaN(numericPrice) || numericPrice <= 0) {
      const fallbackCurrency = currency || getCurrentCurrency();
      const symbol = getCurrencySymbol(fallbackCurrency);
      return `${symbol}0.00`;
    }
    
    const currentCurrency = currency || getCurrentCurrency();
    
    // Shopify зазвичай передає ціни в центах, тому ділимо на 100
    if (numericPrice > 100) {
      numericPrice = numericPrice / 100;
    }
    
    const symbol = getCurrencySymbol(currentCurrency);
    
    let formattedPrice;
    
    switch (currentCurrency) {
      case 'PLN':
      case 'CZK':
      case 'HUF':
      case 'SEK':
      case 'NOK':
      case 'DKK':
        formattedPrice = `${numericPrice.toFixed(2)} ${symbol}`;
        break;
      default:
        formattedPrice = `${symbol}${numericPrice.toFixed(2)}`;
        break;
    }
    
    return formattedPrice;
  }

  function normalizeImageUrl(imageUrl) {
    if (!imageUrl) return '';
    
    if (imageUrl.startsWith('http://') || imageUrl.startsWith('https://')) {
      return imageUrl;
    }
    
    if (imageUrl.startsWith('//')) {
      return `https:${imageUrl}`;
    }
    
    if (imageUrl.startsWith('/')) {
      return `https://${SHOP_DOMAIN}${imageUrl}`;
    }
    
    return `https://${SHOP_DOMAIN}/${imageUrl}`;
  }

  function getFallbackProducts() {
    const currentCurrency = getCurrentCurrency();
    
    const basePrices = {
      '8055477895299': 24.00,
      '8048293052547': 22.00,
      '8048292528259': 26.00,
      '8048292397187': 32.00,
      '8048292298883': 28.00
    };
    
    const exchangeRatesFromGBP = {
      'GBP': 1.00,
      'USD': 1.27,
      'EUR': 1.18,
      'PLN': 5.00,
      'CAD': 1.72,
      'AUD': 1.92,
      'CZK': 29.50,
      'DKK': 8.80,
      'HUF': 460.00,
      'NOK': 14.00,
      'SEK': 13.50,
      'CHF': 1.15
    };
    
    const rate = exchangeRatesFromGBP[currentCurrency] || 1.00;
    
    return {
      '8055477895299': {
        id: '8055477895299',
        name: 'Illuminating Leave-in Conditioner with UV-protection',
        handle: 'illuminating-leave-in-conditioner',
        image_url: `https://${SHOP_DOMAIN}/cdn/shop/files/illuminating-leave-in-conditioner.jpg`,
        price: formatPriceWithCurrency(basePrices['8055477895299'] * rate, currentCurrency),
        description: 'Lightweight leave-in conditioner that adds shine and protects from UV damage',
        currency: currentCurrency
      },
      '8048293052547': {
        id: '8048293052547',
        name: 'Stardust Nourishing Shampoo',
        handle: 'stardust-nourishing-shampoo',
        image_url: `https://${SHOP_DOMAIN}/cdn/shop/files/stardust-nourishing-shampoo.jpg`,
        price: formatPriceWithCurrency(basePrices['8048293052547'] * rate, currentCurrency),
        description: 'Gentle cleansing shampoo that nourishes and strengthens hair',
        currency: currentCurrency
      },
      '8048292528259': {
        id: '8048292528259',
        name: 'Rising Moon Secret Scalp Toner',
        handle: 'rising-moon-secret-scalp-toner',
        image_url: `https://${SHOP_DOMAIN}/cdn/shop/files/rising-moon-secret-scalp-toner.jpg`,
        price: formatPriceWithCurrency(basePrices['8048292528259'] * rate, currentCurrency),
        description: 'Stimulating scalp toner that promotes healthy hair growth',
        currency: currentCurrency
      },
      '8048292397187': {
        id: '8048292397187',
        name: 'Alchemical Golden Hair Oil',
        handle: 'alchemical-golden-hair-oil',
        image_url: `https://${SHOP_DOMAIN}/cdn/shop/files/alchemical-golden-hair-oil.jpg`,
        price: formatPriceWithCurrency(basePrices['8048292397187'] * rate, currentCurrency),
        description: 'Luxurious hair oil that adds shine and reduces frizz',
        currency: currentCurrency
      },
      '8048292298883': {
        id: '8048292298883',
        name: 'Deep Love Hair Mask',
        handle: 'deep-love-hair-mask',
        image_url: `https://${SHOP_DOMAIN}/cdn/shop/files/deep-love-hair-mask.jpg`,
        price: formatPriceWithCurrency(basePrices['8048292298883'] * rate, currentCurrency),
        description: 'Intensive nourishing mask for deep repair and hydration',
        currency: currentCurrency
      }
    };
  }

  function isValidEmail(email) {
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!regex.test(email) || email.length > 100) return false;
    const domain = email.split('@')[1].toLowerCase();
    if (COMMON_TYPOS[domain]) return false;
    const parts = domain.split('.');
    const tld = parts[parts.length - 1];
    if (tld.length < 2 || !/^[a-zA-Z]+$/.test(tld)) return false;
    if (!VALID_DOMAINS.includes(domain) && !domain.endsWith('.edu') && !domain.endsWith('.gov') && !domain.endsWith('.org')) {
      return false;
    }
    return true;
  }

  function updateProgress() {
    const fill = document.getElementById('progressFill');
    const text = document.getElementById('currentQuestion');
    const pct = (currentQuestionIndex / 10) * 100;
    fill.style.width = pct + '%';
    text.textContent = currentQuestionIndex;
  }

  function showStep(stepId) {
    document.querySelectorAll('.quiz-step').forEach(s => s.classList.add('hidden'));
    document.getElementById(stepId).classList.remove('hidden');
  }

  function showQuestion(n) {
    currentQuestionIndex = n;
    document.querySelectorAll('.question').forEach(q => q.classList.remove('active'));
    const q = document.querySelector(`.question[data-question="${n}"]`);
    if (q) q.classList.add('active');
    document.getElementById('prevBtn').classList.toggle('hidden', n === 1);
    document.getElementById('nextBtn').classList.toggle('hidden', n === 10);
    document.getElementById('submitBtn').classList.toggle('hidden', n !== 10);
    updateProgress();
  }

  function bindAnswers() {
    document.querySelectorAll('.answer-option input').forEach(input => {
      input.addEventListener('change', () => {
        document.querySelectorAll('.answer-option').forEach(o => o.classList.remove('selected'));
        input.closest('.answer-option').classList.add('selected');
      });
    });
  }

  function collectAnswer() {
    const sel = document.querySelector(`.question.active input:checked`);
    if (sel) quizAnswers[sel.name] = sel.value;
  }

  async function fetchSingleProduct(productId, handle) {
    const maxRetries = 3;
    const urls = [
      `/products/${handle}.js`,
      `/products/${handle}`,
      `/api/products/${productId}.js`
    ];
    
    const currentCurrency = getCurrentCurrency();
    
    for (let retry = 0; retry < maxRetries; retry++) {
      for (const url of urls) {
        try {
          const res = await fetch(url, { 
            headers: { 
              'Accept': 'application/json',
              'Cache-Control': 'no-cache'
            } 
          });
          
          if (!res.ok) continue;
          
          const data = await res.json();
          if (!data || !data.title) continue;
          
          const variant = data.variants?.[0] || data;
          let price = formatPriceWithCurrency(0, currentCurrency);
          
          if (variant && (variant.price !== undefined && variant.price !== null)) {
            const rawPrice = variant.price;
            price = formatPriceWithCurrency(rawPrice, currentCurrency);
          }
          
          if (price === formatPriceWithCurrency(0, currentCurrency) && variant.compare_at_price) {
            price = formatPriceWithCurrency(variant.compare_at_price, currentCurrency);
          }
          
          let img = '';
          if (data.featured_image) {
            img = normalizeImageUrl(data.featured_image);
          } else if (data.images && Array.isArray(data.images) && data.images.length > 0) {
            img = normalizeImageUrl(data.images[0]);
          } else if (data.image) {
            img = normalizeImageUrl(data.image);
          } else {
            img = `https://${SHOP_DOMAIN}/cdn/shop/files/placeholder-product.jpg`;
          }
          
          return {
            id: productId,
            name: data.title,
            handle: data.handle || handle,
            image_url: img,
            price,
            description: data.description || '',
            fetched_at: new Date().toISOString(),
            source_url: url,
            currency: currentCurrency,
            raw_price: variant.price
          };
          
        } catch(e) { 
          continue; 
        }
      }
      
      if (retry < maxRetries - 1) {
        await new Promise(resolve => setTimeout(resolve, 1000 * (retry + 1)));
      }
    }
    
    return null;
  }

  async function fetchProductData(ids) {
    const results = [];
    const fallbackProducts = getFallbackProducts();
    
    for (const id of ids) {
      const handle = PRODUCT_MAPPING[id];
      if (!handle) {
        const fallback = fallbackProducts[id];
        if (fallback) {
          results.push({...fallback, source: 'fallback'});
        }
        continue;
      }
      
      const productData = await fetchSingleProduct(id, handle);
      if (productData) {
        results.push({...productData, source: 'api'});
      } else {
        const fallback = fallbackProducts[id];
        if (fallback) {
          results.push({...fallback, source: 'fallback'});
        }
      }
    }
    
    return results.filter(x => x);
  }

  function generateKey(answers) {
    const { hair_type, hair_thickness, hair_problem, hair_goals, wash_frequency, styling_habits, hair_colored, scalp_condition, lifestyle } = answers;
    
    let keys = [];
    
    if (hair_type && hair_thickness && hair_problem) {
      keys.push(`${hair_type}_${hair_thickness}_${hair_problem}`);
    }
    
    if (hair_type && hair_problem && hair_goals) {
      keys.push(`${hair_type}_${hair_problem}_${hair_goals}`);
    }
    
    if (hair_type && scalp_condition && hair_goals) {
      keys.push(`${hair_type}_${scalp_condition}_${hair_goals}`);
    }
    
    if (hair_type && wash_frequency === 'daily' && hair_problem) {
      keys.push(`${hair_type}_daily_${hair_problem}`);
    }
    
    if (hair_type && hair_colored !== 'no' && hair_goals) {
      keys.push(`${hair_type}_colored_${hair_goals}`);
    }
    
    if (hair_type && styling_habits === 'daily_heat' && hair_goals) {
      keys.push(`${hair_type}_daily_heat_${hair_goals}`);
    }
    
    if (hair_type && (hair_goals === 'growth' || hair_problem === 'loss')) {
      keys.push(`${hair_type}_${hair_problem === 'loss' ? 'loss' : 'volume_loss'}`);
    }
    
    if (hair_type && (wash_frequency === 'once' || wash_frequency === 'less_often') && hair_problem) {
      keys.push(`${hair_type}_rare_wash_${hair_problem}`);
    }
    
    if (hair_type && hair_thickness === 'fine' && hair_goals) {
      keys.push(`${hair_type}_${hair_thickness}_${hair_goals}`);
    }
    
    return keys;
  }

  function generateRecommendations(answers) {
    const keys = generateKey(answers);
    
    for (const key of keys) {
      if (PERSONALIZED_RECOMMENDATIONS[key]) {
        const rec = PERSONALIZED_RECOMMENDATIONS[key];
        return {
          hairProfile: rec.profile,
          recommendationsText: rec.text,
          recommendedProducts: rec.products
        };
      }
    }
    
    const { hair_type: ht, hair_thickness: th, hair_problem: pr, hair_goals: gl, wash_frequency: wf, styling_habits: st, hair_colored: hc, scalp_condition: sc, lifestyle: lf } = answers;
    
    let hairProfile = `You have ${ht || 'unknown'} ${th || 'unknown'} hair`;
    if (pr) hairProfile += ` with ${pr} concerns`;
    if (sc) hairProfile += ` and ${sc} scalp`;
    hairProfile += '.';
    
    let text = '';
    let recs = [];

    if (pr === 'dryness' || gl === 'moisture') {
      text += 'Your hair needs deep hydration and moisture. ';
      recs.push('8048292298883','8048292397187');
    }
    if (pr === 'oiliness' || sc === 'oily') {
      text += 'Focus on gentle cleansing to balance oil production. ';
      recs.push('8048293052547');
    }
    if (gl === 'growth' || pr === 'loss') {
      text += 'Stimulate hair growth with scalp treatments. ';
      recs.push('8048292528259');
    }
    if (st === 'daily_heat' || gl === 'recovery') {
      text += 'Protect from heat damage and add shine. ';
      recs.push('8055477895299');
    }
    if (gl === 'frizz' || pr === 'frizziness') {
      text += 'Control frizz with smoothing products. ';
      recs.push('8048292397187','8055477895299');
    }
    if (gl === 'volume' && th === 'fine') {
      text += 'Add volume without weighing down fine hair. ';
      recs.push('8055477895299');
    }
    if (gl === 'shine' || pr === 'dullness') {
      text += 'Enhance shine and luminosity. ';
      recs.push('8055477895299','8048292397187');
    }
    if (hc === 'regularly' || hc === 'rarely') {
      text += 'Protect and nourish color-treated hair. ';
      recs.push('8048292298883','8055477895299');
    }
    if (sc === 'dry') {
      text += 'Soothe and balance dry scalp. ';
      recs.push('8048292528259');
    }
    if (lf === 'active') {
      text += 'Quick and effective care for active lifestyle. ';
      recs.push('8048293052547','8055477895299');
    }
    if (wf === 'daily') {
      text += 'Gentle daily care to prevent over-cleansing. ';
      recs.push('8048293052547');
    }
    if (th === 'thick' && (pr === 'dryness' || gl === 'moisture')) {
      text += 'Deep nourishment for thick, thirsty hair. ';
      recs.push('8048292298883','8048292397187');
    }
    if (ht === 'curly' || ht === 'afro') {
      text += 'Special care for curly hair texture. ';
      recs.push('8048292397187','8048292298883');
    }
    if (pr === 'brittleness' || gl === 'recovery') {
      text += 'Strengthen and repair damaged hair. ';
      recs.push('8048292298883','8048292397187');
    }

    recs = [...new Set(recs)];
    if (!recs.length) {
      recs = ['8048293052547','8048292298883','8055477895299'];
      text = 'Your hair would benefit from a balanced routine with gentle cleansing, deep nourishment, and protection. ';
    } else if (recs.length === 1) {
      if (!recs.includes('8048293052547')) recs.push('8048293052547');
      if (!recs.includes('8048292298883')) recs.push('8048292298883');
    }

    return { hairProfile, recommendationsText: text, recommendedProducts: recs };
  }

  async function createOrUpdateContact(email, answers) {
    const recs = generateRecommendations(answers);
    const classification = `${answers.hair_type||'unknown'}_${answers.hair_thickness||'unknown'}_${answers.hair_problem||'unknown'}`;
    
    const props = {
      quiz_hair_type: classification,
      quiz_completed_date: new Date().toISOString(),
      quiz_answers: JSON.stringify(answers)
    };
    
    let existing = null;
    try {
      const search = await fetch(`https://api.omnisend.com/v3/contacts?email=${encodeURIComponent(email)}`, {
        method: 'GET',
        headers: { 'Content-Type':'application/json','X-API-Key':OMNISEND_API_KEY }
      });
      if (search.ok) {
        const data = await search.json();
        if (data.contacts?.length) existing = data.contacts[0];
      }
    } catch{}

    let res, id;
    if (existing) {
      res = await fetch(`https://api.omnisend.com/v3/contacts/${existing.contactID}`, {
        method:'PATCH',
        headers:{ 'Content-Type':'application/json','X-API-Key':OMNISEND_API_KEY },
        body: JSON.stringify({ 
          customProperties: props, 
          tags: ["quiz"]
        })
      });
      id = existing.contactID;
    } else {
      res = await fetch('https://api.omnisend.com/v3/contacts', {
        method:'POST',
        headers:{ 'Content-Type':'application/json','X-API-Key':OMNISEND_API_KEY },
        body: JSON.stringify({
          email, 
          status:"subscribed", 
          statusDate:new Date().toISOString(),
          tags:["quiz"], 
          customProperties: props
        })
      });
      if (res.ok) {
        const d = await res.json();
        id = d.contactID;
      }
    }
    
    if (res.ok && id) {
      return { success:true, contactID:id };
    }
    
    const err = await res.text();
    return { success:false, error: err };
  }

  async function sendQuizCompletedEvent(contactID, email, answers) {
    const { hairProfile, recommendationsText, recommendedProducts } = generateRecommendations(answers);
    
    const products = await fetchProductData(recommendedProducts);
    if (!products.length) {
      return { success: false, error: 'No product data' };
    }

    const omnisendProducts = products.map(product => ({
      id: product.id,
      name: product.name,
      image_url: product.image_url,
      price: product.price,
      handle: product.handle
    }));

    const payload = {
      eventName: 'quiz_completed',
      fields: {
        quiz_hair_profile: hairProfile,
        quiz_recommendations: recommendationsText,
        quiz_recommended_products: omnisendProducts
      }
    };

    let res = await fetch('https://api.omnisend.com/v3/events', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-API-Key': OMNISEND_API_KEY
      },
      body: JSON.stringify(payload)
    });

    if (!res.ok) {
      const v5payload = {
        eventName: 'quiz_completed',
        origin: 'api',
        contact: { email },
        properties: payload.fields
      };
      
      res = await fetch('https://api.omnisend.com/v5/events', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-api-key': OMNISEND_API_KEY
        },
        body: JSON.stringify(v5payload)
      });
    }

    if (res.ok) {
      return { success: true };
    } else {
      const err = await res.text();
      return { success: false, error: err };
    }
  }

  async function sendToOmnisend(email, answers) {
    const contact = await createOrUpdateContact(email, answers);
    if (!contact.success) return false;
    const evt = await sendQuizCompletedEvent(contact.contactID, email, answers);
    return evt.success;
  }

  function bindEvents() {
    document.getElementById('startQuizBtn').addEventListener('click', () => {
      showStep('quizStep');
      showQuestion(1);
    });

    document.getElementById('nextBtn').addEventListener('click', () => {
      const answered = !!document.querySelector(`.question[data-question="${currentQuestionIndex}"] input:checked`);
      if (!answered) return;
      collectAnswer();
      showQuestion(currentQuestionIndex + 1);
    });

    document.getElementById('prevBtn').addEventListener('click', () => {
      if (currentQuestionIndex > 1) showQuestion(currentQuestionIndex - 1);
    });

    document.getElementById('quizForm').addEventListener('submit', e => {
      e.preventDefault();
      const answered = !!document.querySelector(`.question[data-question="${currentQuestionIndex}"] input:checked`);
      if (!answered) return;
      collectAnswer();
      showStep('emailStep');
    });

    document.getElementById('emailForm').addEventListener('submit', async e => {
      e.preventDefault();
      const input = document.getElementById('userEmail');
      const email = input.value.trim();
      input.classList.remove('input-error');
      if (!isValidEmail(email)) {
        input.classList.add('input-error');
        return;
      }
      const btn = e.target.querySelector('button');
      btn.disabled = true;
      btn.textContent = 'Processing...';
      const ok = await sendToOmnisend(email, quizAnswers);
      btn.disabled = false;
      btn.textContent = 'Get My Results';
      if (ok) setTimeout(() => showStep('finalStep'), 500);
    });

    bindAnswers();
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', bindEvents);
  } else {
    bindEvents();
  }
})();
</script>

{% schema %}
{
  "name": "Hair Quiz",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Quiz Content"
    },
    {
      "type": "text",
      "id": "quiz_title",
      "label": "Quiz Title",
      "default": "Discover Your Perfect Hair Care Routine"
    },
    {
      "type": "textarea",
      "id": "quiz_subtitle", 
      "label": "Quiz Subtitle",
      "default": "Get personalized recommendations based on your unique hair type and needs"
    },
    {
      "type": "header",
      "content": "Email Collection"
    },
    {
      "type": "text",
      "id": "email_title",
      "label": "Email Section Title",
      "default": "Get Your Personalized Results"
    },
    {
      "type": "textarea",
      "id": "email_subtitle",
      "label": "Email Section Subtitle",
      "default": "Enter your email to receive your customized hair care recommendations"
    },
    {
      "type": "header",
      "content": "Final Message"
    },
    {
      "type": "text",
      "id": "final_title",
      "label": "Final Page Title",
      "default": "Thank You!"
    },
    {
      "type": "textarea",
      "id": "final_message",
      "label": "Final Message",
      "default": "You will receive your personalized product selection via email shortly."
    }
  ],
  "presets": [
    {
      "name": "Hair Quiz"
    }
  ]
}
{% endschema %}