{%- style -%}
  /* змінні секції */
  #shopify-section-{{ section.id }} {
    --section-padding-top:   {{ section.settings.padding_top }}px;
    --section-padding-bottom:{{ section.settings.padding_bottom }}px;
    --faq-bg:                {{ section.settings.background_color }};
    --sidebar-bg:            {{ section.settings.sidebar_background_color }};
    --content-bg:            {{ section.settings.content_background_color }};
    --text-color:            {{ section.settings.text_color }};
    --border-color:          {{ section.settings.border_color }};
    --icon-bg:               {{ section.settings.icon_background_color }};
    --icon-color:            {{ section.settings.icon_color }};
    --title-size:            {{ section.settings.title_size }}px;
    --question-size:         {{ section.settings.question_size }}px;
    --accent:                currentColor;
  }
{%- endstyle -%}

<div id="section-id--{{ section.id }}"
     class="section--padding{% if section.settings.show_divider %} section--divider{% endif %}"
     style="background: var(--faq-bg);">

  {%- if section.settings.secondary_background -%}
    <div class="faq-coloured-wrapper" style="background: var(--faq-bg);">
  {%- endif -%}

  <div class="faq-tabs page-width{% if section.settings.narrow %} page-width--inner{% endif %}">

   
    <aside class="faq-tabs__sidebar" style="background: var(--sidebar-bg); color: var(--text-color);">
      {%- unless section.settings.heading == blank -%}
        <h2 class="faq-section-heading">{{ section.settings.heading | escape }}</h2>
      {%- endunless -%}

      <ul class="faq-tabs__categories" role="tablist">
        {%- for block in section.blocks -%}
          <li class="faq-tabs__category{% if forloop.first %} is-active{% endif %}"
              role="tab"
              aria-controls="tab-content-{{ block.id }}"
              data-tab-target="tab-content-{{ block.id }}"
              {{ block.shopify_attributes }}>
            {{ block.settings.title | escape }}
          </li>
        {%- endfor -%}
      </ul>
    </aside>

   
    <div class="faq-tabs__panels" style="background: var(--content-bg); color: var(--text-color);">
      {%- for block in section.blocks -%}
        <div id="tab-content-{{ block.id }}"
             class="faq-tabs__panel{% if forloop.first %} is-active{% endif %}"
             role="tabpanel">

          <h2 class="faq-panel-heading"{% if section.settings.make_title_bold %} style="font-weight: 700;"{% endif %}>{{ block.settings.title | escape }}</h2>

          <div class="faq-accordion-items">
            {%- for i in (1..10) -%}
              {%- assign q_key = 'question_' | append: i -%}
              {%- assign a_key = 'answer_'   | append: i -%}
              {%- assign q_txt = block.settings[q_key] -%}
              {%- assign a_txt = block.settings[a_key] -%}

              {%- if q_txt != blank and a_txt != blank -%}
                <accordion-tab class="faq-accordion-item{% if forloop.first %} first-item{% endif %}">
                  <details>
                    <summary class="faq-summary">
                      <span class="faq-question">{{ q_txt | escape }}</span>
                      <span class="icon-plus-circle" aria-hidden="true"></span>
                    </summary>

                    <div class="accordion__content rte typeset">
                      {{ a_txt }}
                    </div>
                  </details>
                </accordion-tab>
              {%- endif -%}
            {%- endfor -%}
          </div>
        </div>
      {%- endfor -%}
    </div><!-- /.faq-tabs__panels -->
  </div><!-- /.faq-tabs -->

  {%- if section.settings.secondary_background -%}</div>{%- endif -%}
</div>

<style>

.faq-coloured-wrapper{
  max-width:1500px;
  margin:0 auto;
  border-radius:20px;
}


.faq-tabs{display:flex;gap:3rem;}
.faq-tabs__sidebar{
  flex:0 0 450px;
  padding:2.25rem;
  border-radius:10px;
}
.faq-tabs__panels{
  flex:1 1 auto;
  position:relative;
  padding:2.25rem;
  border-radius:10px;
  overflow:hidden; 
}

/* Larger headings */
.faq-section-heading,
.faq-panel-heading{
  font-size: var(--title-size);
  margin:0 0 1.5rem;
}

.faq-tabs__categories{list-style:none;margin:0;padding:0;}
.faq-tabs__category{
  position:relative;
  cursor:pointer;
  padding:.75rem 1.25rem;
  border-left:4px solid transparent;
  transition:color .3s cubic-bezier(0.25, 0.1, 0.25, 1);
  border-radius: 0 4px 4px 0;
}
.faq-tabs__category:hover{
  text-decoration:none;
  color:var(--accent);
}
.faq-tabs__category.is-active{
  font-weight:600;
  color:var(--accent);
}
.faq-tabs__category.is-active::before{
  content:'';
  position:absolute;
  left:-12px;
  top:50%;
  transform:translateY(-50%);
  width:6px;
  height:6px;
  border-radius:50%;
  background:var(--accent);
}

/* Enhanced smooth panel transitions - simple fade in without initial visibility */
.faq-tabs__panel{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  opacity:0;
  visibility:hidden;
  pointer-events:none;
}
.faq-tabs__panel.is-active{
  position:relative;
  opacity:1;
  visibility:visible;
  pointer-events:auto;
}

/* Accordion items with borders */
.faq-accordion-item details{
  border-bottom:1px solid var(--border-color);
  padding:1rem 0;
}
.first-item details {
  border-top:1px solid var(--border-color);
}
.faq-summary{
  display:flex;
  justify-content:space-between;
  align-items:center;
  cursor:pointer;
  list-style:none;
  padding:0.5rem 0;
}
.faq-question{
  font-weight:500;
  font-size: var(--question-size);
  margin-right:1rem;
}

/* Smaller + icon with improved styling */
.icon-plus-circle{
  position:relative;
  width:22px;
  height:22px;
  flex:0 0 22px;
  border-radius:50%;
  background:var(--icon-bg);
  transition:background 0.3s cubic-bezier(0.25, 0.1, 0.25, 1),
             transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1);
}
.icon-plus-circle::before,
.icon-plus-circle::after{
  content:'';
  position:absolute;
  left:50%;
  top:50%;
  transform:translate(-50%,-50%);
  background:var(--icon-color);
  transition:opacity 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
}
.icon-plus-circle::before{width:10px;height:2px;}
.icon-plus-circle::after {width:2px;height:10px;}

/* Improved rotation animation for open state */
details[open] .icon-plus-circle{
  transform:rotate(90deg);
  background:var(--icon-bg);
}
details[open] .icon-plus-circle::after{
  opacity:0;
}

/* Enhanced answer content animation */
.accordion__content{
  animation: slide-down 0.5s cubic-bezier(0.19, 1, 0.22, 1);
  transform-origin: top center;
  will-change: transform, opacity;
}
@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(-15px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive adjustments */
@media screen and (max-width: 749px) {
  .faq-tabs {
    flex-direction: column;
  }
  .faq-tabs__sidebar {
    flex: 1 1 auto;
    margin-bottom: 1.5rem;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function(){
  const section = document.getElementById('section-id--{{ section.id }}');
  if(!section) return;

  const tabs = section.querySelectorAll('.faq-tabs__category');
  const panels = section.querySelectorAll('.faq-tabs__panel');

  // Add staggered animation for FAQ items
  function animateItems(panel) {
    const items = panel.querySelectorAll('.faq-accordion-item');
    if (!items.length) return;
    
    items.forEach((item, index) => {
      // First reset any existing styles
      item.style.opacity = '0';
      item.style.transform = 'translateY(15px)';
      
      // Force reflow
      void item.offsetWidth;
      
      // Then apply animations with staggered delay
      setTimeout(() => {
        item.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
        item.style.opacity = '1';
        item.style.transform = 'translateY(0)';
      }, 50 + (index * 80));
    });
  }
  
  // Animate the initial panel
  const activePanel = section.querySelector('.faq-tabs__panel.is-active');
  if (activePanel) {
    // Set each item to be animated
    const items = activePanel.querySelectorAll('.faq-accordion-item');
    items.forEach((item, index) => {
      item.style.opacity = '0';
      item.style.transform = 'translateY(15px)';
    });
    
    setTimeout(() => {
      animateItems(activePanel);
    }, 100);
  }

  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      if(tab.classList.contains('is-active')) return;

      const targetId = tab.dataset.tabTarget;
      const targetPanel = section.querySelector('#' + targetId);

      // Update active states
      tabs.forEach(t => t.classList.remove('is-active'));
      tab.classList.add('is-active');
      
      // Switch panels - hide current panel first
      const currentPanel = section.querySelector('.faq-tabs__panel.is-active');
      if (currentPanel) {
        currentPanel.classList.remove('is-active');
      }
      
      // Show new panel
      targetPanel.classList.add('is-active');
      
      // Animate in the new panel items
      animateItems(targetPanel);
    });
  });
});
</script>

{% schema %}
{
  "name": "FAQ Tabs",
  "tag": "section",
  "class": "section",
  "settings": [
    { "type": "color",    "id": "background_color",        "label": "Section background color",      "default": "#ffffff" },
    { "type": "color",    "id": "sidebar_background_color","label": "Sidebar background color",      "default": "#f5f5f5" },
    { "type": "color",    "id": "content_background_color","label": "Content panel background color","default": "#ffffff" },
    { "type": "color",    "id": "text_color",              "label": "Text color",                   "default": "#333333" },
    { "type": "color",    "id": "border_color",            "label": "Border color",                 "default": "#e5e5e5" },
    
    { "type": "header",   "content": "Icons" },
    { "type": "color",    "id": "icon_background_color",   "label": "Icon background color",        "default": "#eeeeee" },
    { "type": "color",    "id": "icon_color",              "label": "Icon color",                   "default": "#ffffff" },
    
    { "type": "header",   "content": "Typography" },
    { "type": "range",    "id": "title_size",              "min": 16, "max": 36, "step": 1, "unit": "px", "label": "Title size", "default": 24 },
    { "type": "range",    "id": "question_size",           "min": 12, "max": 24, "step": 1, "unit": "px", "label": "Question size", "default": 16 },
    { "type": "checkbox", "id": "make_title_bold",         "label": "Bold title",                  "default": true },
    
    { "type": "header",   "content": "Layout Options" },
    { "type": "checkbox", "id": "narrow",                  "label": "Narrow layout",                "default": false },
    { "type": "checkbox", "id": "secondary_background",    "label": "Colored background wrapper",   "default": false },
    { "type": "checkbox", "id": "show_divider",            "label": "Show divider line",           "default": false },

    { "type": "header",   "content": "Heading" },
    { "type": "text",     "id": "heading",                 "label": "Section heading",              "default": "FAQ" },
    { "type": "select",   "id": "heading_size",            "label": "Heading size",
      "options":[ { "value":"h2","label":"H2" }, { "value":"h1","label":"H1" }, { "value":"h0","label":"H0" } ],
      "default":"h1" },
    { "type": "select",   "id": "heading_alignment",       "label": "Heading alignment",
      "options":[ { "value":"left","label":"Left" }, { "value":"center","label":"Center" }, { "value":"right","label":"Right" } ],
      "default":"left" },
    { "type": "select",   "id": "heading_tag",             "label": "HTML tag for heading",
      "options":[ { "value":"h1","label":"h1" }, { "value":"h2","label":"h2" }, { "value":"h3","label":"h3" },
                   { "value":"div","label":"div" }, { "value":"span","label":"span" }, { "value":"p","label":"p" } ],
      "default":"h2" },

    { "type": "header",   "content": "Padding" },
    { "type": "range",    "id": "padding_top",             "min": 0, "max": 100, "step": 4, "unit": "px", "label": "Top padding",    "default": 36 },
    { "type": "range",    "id": "padding_bottom",          "min": 0, "max": 100, "step": 4, "unit": "px", "label": "Bottom padding", "default": 36 }
  ],

  "blocks": [
    {
      "type": "category",
      "name": "FAQ category",
      "settings": [
        { "type": "text", "id": "title", "label": "Category title", "default": "Products" },

        { "type": "header", "content": "FAQ 1"  },
        { "type": "text",   "id": "question_1",  "label": "Question 1" },
        { "type": "richtext","id": "answer_1",   "label": "Answer 1"   },

        { "type": "header", "content": "FAQ 2"  },
        { "type": "text",   "id": "question_2",  "label": "Question 2" },
        { "type": "richtext","id": "answer_2",   "label": "Answer 2"   },

        { "type": "header", "content": "FAQ 3"  },
        { "type": "text",   "id": "question_3",  "label": "Question 3" },
        { "type": "richtext","id": "answer_3",   "label": "Answer 3"   },

        { "type": "header", "content": "FAQ 4"  },
        { "type": "text",   "id": "question_4",  "label": "Question 4" },
        { "type": "richtext","id": "answer_4",   "label": "Answer 4"   },

        { "type": "header", "content": "FAQ 5"  },
        { "type": "text",   "id": "question_5",  "label": "Question 5" },
        { "type": "richtext","id": "answer_5",   "label": "Answer 5"   },

        { "type": "header", "content": "FAQ 6"  },
        { "type": "text",   "id": "question_6",  "label": "Question 6" },
        { "type": "richtext","id": "answer_6",   "label": "Answer 6"   },

        { "type": "header", "content": "FAQ 7"  },
        { "type": "text",   "id": "question_7",  "label": "Question 7" },
        { "type": "richtext","id": "answer_7",   "label": "Answer 7"   },

        { "type": "header", "content": "FAQ 8"  },
        { "type": "text",   "id": "question_8",  "label": "Question 8" },
        { "type": "richtext","id": "answer_8",   "label": "Answer 8"   },

        { "type": "header", "content": "FAQ 9"  },
        { "type": "text",   "id": "question_9",  "label": "Question 9" },
        { "type": "richtext","id": "answer_9",   "label": "Answer 9"   },

        { "type": "header", "content": "FAQ 10" },
        { "type": "text",   "id": "question_10", "label": "Question 10"},
        { "type": "richtext","id": "answer_10",  "label": "Answer 10"  }
      ]
    }
  ],

  "presets": [
    {
      "name": "FAQ Tabs",
      "blocks": [
        { "type": "category" },
        { "type": "category" }
      ]
    }
  ],

  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  }
}
{% endschema %}